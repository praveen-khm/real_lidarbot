<?xml version='1.0'?>
<sdf version='1.5'>
  <model name='real_lidarbot'>
    <static>false</static>
    
    <link name='base_footprint'/>
    <pose>0 0 0 0 0 0</pose>

    <link name='base_link'>
      <collision name='base_link_collision'>
        <pose>0 0 0.002 0 0 0</pose>
        <inertial>
          <mass>0.864</mass>
          <inertia>
            <ixx>0.0009594</ixx>
            <iyy>0.003263</iyy>
            <izz>0.004046</izz>
            <ixy>0</ixy>
            <ixz>0</ixz>
            <iyz>0</iyz>
          </inertia>
        </inertial>
        <geometry>
          <box>
            <size>.21 .11 .035</size>
          </box>
        </geometry>
      </collision>
      <visual name='base_link_visual'>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/robot_base_link.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <!-- Caster mount -->
      <collision name='caster_mount_collision'>
        <pose>0.086 0 0.005 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.023</radius>
            <length>0.012</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name='caster_mount_visual'>
        <pose>0.086 0 -0.035 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/caster_mount.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <collision name='rpi_4_stand_collision'>
        <pose>-0.06 0 0.03 0 0 -1.5707</pose>
        <geometry>
          <box>
            <size>0.098 0.065 0.034</size>
          </box>
        </geometry>
      </collision>
      <visual name='rpi_4_stand_visual'>
        <pose>-0.06 0.015 0.043 3.1414 0 -3.1414</pose>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/rpi_stand.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <!-- Raspberry Pi 4 -->
      <collision name='rpi_4_collision'>
        <pose>-0.06 0.005 0.052 0 0 -1.5707</pose>
        <geometry>
          <box>
            <size>0.09 0.06 0.02</size>
          </box>
        </geometry>
      </collision>
      <visual name='rpi_4_visual'>
        <pose>-0.06 0.0035 0.045 0 0 1.5707</pose>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/rpi_4.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <!-- Power bank stand -->
      <collision name='power_bank_stand_collision'>
        <pose>0.033 0 0.0205 0 0 -1.5707</pose>
        <geometry>
          <box>
            <size>0.098 0.065 0.015</size>
          </box>
        </geometry>
      </collision>
      <visual name='power_bank_stand_visual'>
      <pose>0.033 0.015 0.0435 3.1414 0 3.1414</pose>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/power_bank_stand.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <!-- Power bank -->
      <collision name='power_bank_collision'>
      <pose>0.033 0 0.038 0 0 -1.5707</pose>
        <geometry>
          <box>
            <size>0.096 0.062 0.02</size>
          </box>
        </geometry>
      </collision>
      <visual name='power_bank_visual'>
      <pose>0.0635 0.0475 0.0278 0 0 1.5707</pose>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/power_bank.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <!-- Rplidar stand -->
      <collision name='rplidar_stand_collision'>
        <pose>0.033 0 0.053 0 0 -1.5707</pose>
        <geometry>
          <box>
            <size>0.098 0.065 0.015</size>
          </box>
        </geometry>
      </collision>
      <visual name='rplidar_stand_visual'>
      <pose>0.033 0.015 0.03 0 0 -6.2828</pose>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/rplidar_stand.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <!-- Rplidar base -->
      <collision name='rplidar_base_collision'>
        <pose>0.033 -0.004 0.0685 0 0 -1.5707</pose>
        <geometry>
          <box>
            <size>0.1 0.072 0.035</size>
          </box>
        </geometry>
      </collision>
      <visual name='rplidar_base_visual'>
      <pose>0.03485 0.0087 0.05 0 0 -1.5707</pose>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/rplidar_base.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <!-- Depth camera mount -->
      <collision name='camera_mount_collision'>
        <pose>0.085 0 0.0285 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.008</radius>
            <length>0.031</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name='camera_mount_visual'>
      <pose>0.085 0 0.0285 0 0 0</pose>
      <geometry>
        <cylinder>
          <radius>0.007</radius>
          <length>0.03</length>
        </cylinder>
      </geometry>
      </visual>

    </link>

    <!-- Imu sensor -->
    <link name='imu_link'>
      <pose>-0.06 0 0.027 0 0 3.1414</pose>
      <gravity>true</gravity>
      <sensor name='lidarbot_imu' type='imu'>
        <plugin name='real_lidarbot_imu' filename='libgazebo_ros_imu_sensor.so'>
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
          <frame_name>imu_link</frame_name>
          <ros>
            <namespace>/imu</namespace>
            <remapping>~/out:=data</remapping>
          </ros>
        </plugin>
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <imu>
          <orientation>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-3</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-3</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-3</stddev>
              </noise>
            </z>
          </orientation>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
      </sensor>
    </link>

    <!-- Left wheel link  -->
    <link name='left_wheel'>
      <pose>-0.0288 0.055 0 0 1.5707 1.5707</pose>
      <inertial>
        <mass>0.031</mass>
        <inertia>
          <ixx>0.000013724</ixx>
          <iyy>0.000013724</iyy>
          <izz>0.000024219</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <collision name='left_wheel_collision'>
        <pose>0 0 0.015 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.0325</radius>
            <length>0.0265</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name='left_wheel_visual'>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/left_wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>

    <!-- Right robot wheel  -->
    <link name='right_wheel'>
      <pose>-0.0288 -0.064 0 0 1.5707 1.5707</pose>
      <inertial>
        <mass>0.031</mass>
        <inertia>
          <ixx>0.000013724</ixx>
          <iyy>0.000013724</iyy>
          <izz>0.000024219</izz>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyz>0</iyz>
        </inertia>
      </inertial>
      <collision name='right_wheel_collision'>
        <pose>0 0 -0.007 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.0325</radius>
            <length>0.0265</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name='right_wheel_visual'>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/right_wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>

    <!-- Caster wheel -->
    <link name='caster_wheel'>
      <pose>0.092 0 -0.0175 0 0 1.5707</pose>
      <collision name='caster_wheel_collision'>
        <geometry>
          <sphere>
            <radius>0.015</radius>
          </sphere>
        </geometry>
        <surface>
          <friction>
            <ode>
              <!-- <mu>0.001</mu>
              <mu2>0.001</mu2> -->
              <mu>0.5</mu>
              <mu2>0.5</mu2>
              <slip1>0.01</slip1>
              <slip2>0.01</slip2>
              <fdir1>0 0 1</fdir1>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name='caster_wheel_visual'>
        <pose>0 -0.007 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/caster_wheel.dae</uri>
          </mesh>
        </geometry>
      </visual>
    </link>

    <!-- Rplidar top -->
    <link name='lidar_link'>
      <pose>0.0315 0.008 0.083 0 0 -1.5707</pose>
      <collision name='lidar_collision'>
        <pose>0 -0.002 0.01 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.037</radius>
            <length>0.021</length>
          </cylinder>
        </geometry>
      </collision>
      <visual name='lidar_visual'>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/rplidar_top.dae</uri>
          </mesh>
        </geometry>
      </visual>

      <sensor type='ray' name='lidar'>
        <pose>0 0 0.01 0 0 -0.7854</pose>
        <always_on>true</always_on>
        <visualize>false</visualize>
        <update_rate>5.5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1</resolution>
              <min_angle>0</min_angle>
              <max_angle>6.28</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.15</min>
            <max>12</max>
            <resolution>0.2</resolution>
          </range>
           <noise>
             <type>gaussian</type>
             <mean>0.0</mean>
             <stddev>0.01</stddev>
           </noise>
        </ray>
        <plugin name='scan' filename='libgazebo_ros_ray_sensor.so'>
          <ros>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>lidar_link</frame_name>
        </plugin>
      </sensor>
    </link>

    <!-- Camera -->
    <link name="camera_link_optical">
      <pose>0.0825 -0.001 0.055 -1.5707 0 -1.5707</pose>
    </link>

    <link name='camera_link'>
      <pose>0.0825 -0.001 0.055 0 0 0</pose>
      <collision name='camera_collision'>
        <pose>0.0015 0 0.002 0 0 1.5707</pose>
        <geometry>
          <box>
            <size>0.1 0.025 0.022</size>
          </box>
        </geometry>
      </collision>
      <visual name="camera_visual">
        <pose>0.0125 0 0 1.5707 0 1.5707</pose>
        <geometry>
          <mesh>
            <uri>model://lidarbot_description/meshes/d415.dae</uri>
          </mesh>
        </geometry>
      </visual>
      
      <sensor type='camera' name='camera'>
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>10</update_rate>
        <camera>
          <horizontal_fov>1.089</horizontal_fov>
          <image>
            <format>R8G8B8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
        </camera>

        <plugin name='camera_controller' filename='libgazebo_ros_camera.so'>
          <frame_name>camera_link_optical</frame_name>
        </plugin>
      </sensor>
    </link>

    <!-- Joints  -->
    <joint name='base_joint' type='fixed'>
      <pose>0 0 0 0 0 0</pose>
      <parent>base_footprint</parent>
      <child>base_link</child>
    </joint>

    <joint name='imu_joint' type='fixed'>
      <pose>0 0 0 0 0 0</pose>
      <parent>base_link</parent>
      <child>imu_link</child>
    </joint>

    <joint name='left_wheel_joint' type='revolute'>
      <pose>0 0 0 0 0 0</pose>
      <parent>base_link</parent>
      <child>left_wheel</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name='right_wheel_joint' type='revolute'>
      <pose>0 0 0 0 0 0</pose>
      <parent>base_link</parent>
      <child>right_wheel</child>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name='caster_joint' type='fixed'>
      <pose>0 0 0 0 0 0</pose>
      <parent>base_link</parent>
      <child>caster_wheel</child>
    </joint>
    
    <joint name='lidar_joint' type='fixed'>
      <pose>0 0 0 0 0 0</pose>
      <parent>base_link</parent>
      <child>lidar_link</child>
    </joint>

    <joint name='camera_joint' type='fixed'>
      <pose>0 0 0 0 0 0</pose>
      <parent>base_link</parent>
      <child>camera_link</child>
    </joint>

    <joint name="camera_optical_joint" type="fixed">
      <pose>0 0 0 0 0 0</pose>
      <parent>camera_link</parent>
      <child>camera_link_optical</child>
    </joint>

    <!-- Wheel Odometry -->
    <plugin name='lidarbot_diff_drive' filename='libgazebo_ros_diff_drive.so'>
      <update_rate>25</update_rate>
      <left_joint>left_wheel_joint</left_joint>
      <right_joint>right_wheel_joint</right_joint>
      <wheel_separation>0.134</wheel_separation>
      <wheel_diameter>0.067</wheel_diameter>
      <max_wheel_torque>15</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      <command_topic>cmd_vel</command_topic>
      
      <!-- Output. When false, publish no wheel odometry data to a ROS topic -->
      <publish_odom>true</publish_odom>
      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- Addison usually uses the robot_localization package to publish this transform -->   
      <publish_odom_tf>true</publish_odom_tf>     
      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->   
      <publish_wheel_tf>false</publish_wheel_tf>
      <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <odometry_topic>odom</odometry_topic>
      <!-- Odometry frame, defaults to `odom` -->
      <odometry_frame>odom</odometry_frame>
      <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
      <robot_base_frame>base_footprint</robot_base_frame>
      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometry_source>1</odometry_source>
      <!-- Change the ROS topic we will publish the odometry data to -->
      <ros>
        <remapping>odom:=wheel/odometry</remapping>
      </ros>
    </plugin>

    <!-- Joint State Publisher -->
    <plugin name='lidarbot_joint_state' filename='libgazebo_ros_joint_state_publisher.so'>
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>25</update_rate>
      <joint_name>left_wheel_joint</joint_name>
      <joint_name>right_wheel_joint</joint_name>
    </plugin>
  </model>
</sdf>